trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'service-connection-name' # Azure service connection name
  resourceGroup: 'my-resource-group'                # Resource Group where App Service is deployed
  packagePath: '$(System.DefaultWorkingDirectory)/**/*.zip'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'  # Use the desired Node.js version

    - script: |
        npm install
        npm run build
      displayName: 'Install Dependencies and Build'

    - script: |
        npm run package
      displayName: 'Package Application'

    - publish: $(System.DefaultWorkingDirectory)
      artifact: drop

- stage: Deploy
  jobs:
  - job: Deploy
    dependsOn: Build
    steps:
    - checkout: self

    - download: current
      artifact: drop

    - script: |
        # Get the App Service name from Terraform outputs
        appServiceName=$(az terraform output -name app_service_name -resource-group $(resourceGroup) --query "value" -o tsv)
        echo "##vso[task.setvariable variable=appServiceName]$appServiceName"
      displayName: 'Get App Service Name from Terraform'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: $(azureSubscription)
        appType: 'webApp'
        appName: $(appServiceName)
        package: $(packagePath)

